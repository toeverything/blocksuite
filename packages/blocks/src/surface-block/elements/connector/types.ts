import type { StrokeStyle } from '../../consts.js';
import type { IVec } from '../../utils/vec.js';
import type { CanvasElementType } from '../edgeless-element.js';
import type { ISurfaceElement } from '../surface-element.js';

export enum ConnectorMode {
  Straight,
  Orthogonal,
  Curve,
}

export enum ConnectorEndpoint {
  Front = 'Front',
  Rear = 'Rear',
}

export enum ConnectorEndpointStyle {
  None = 'None',
  Arrow = 'Arrow',
  Triangle = 'Triangle',
  Circle = 'Circle',
  Diamond = 'Diamond',
}

export const DEFAULT_FRONT_END_POINT_STYLE = ConnectorEndpointStyle.None;
export const DEFAULT_REAR_END_POINT_STYLE = ConnectorEndpointStyle.Arrow;
export const DEFAULT_ARROW_SIZE = 15;
// at least one of id and position is not null
// both exists means the position is relative to the element
export type Connection = {
  id?: string;
  position?: IVec;
};

export interface Controller {
  x: number;
  y: number;
  // If this value is true, it indicates that the point was generated by the user dragging
  customized?: boolean;
}

export interface IConnector extends ISurfaceElement {
  type: CanvasElementType.CONNECTOR;

  mode: ConnectorMode;
  stroke: string;
  strokeWidth: number;
  strokeStyle: StrokeStyle;
  // https://github.com/rough-stuff/rough/wiki#roughness
  roughness?: number;
  rough?: boolean;
  source: Connection;
  target: Connection;

  // absolute canvas point
  controllers: Controller[];

  path: IVec[];
  absolutePath: IVec[];

  frontEndpointStyle?: ConnectorEndpointStyle;
  rearEndpointStyle?: ConnectorEndpointStyle;
}
